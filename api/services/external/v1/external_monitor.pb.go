// Copyright 2024 The Kubernetes Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: api/services/external/v1/external_monitor.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Severity levels for events.
type Severity int32

const (
	Severity_SEVERITY_UNSPECIFIED Severity = 0
	Severity_SEVERITY_INFO        Severity = 1
	Severity_SEVERITY_WARN        Severity = 2
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_INFO",
		2: "SEVERITY_WARN",
	}
	Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_INFO":        1,
		"SEVERITY_WARN":        2,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_api_services_external_v1_external_monitor_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_api_services_external_v1_external_monitor_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_api_services_external_v1_external_monitor_proto_rawDescGZIP(), []int{0}
}

// Status values for conditions.
type ConditionStatus int32

const (
	ConditionStatus_CONDITION_STATUS_UNSPECIFIED ConditionStatus = 0
	ConditionStatus_CONDITION_STATUS_TRUE        ConditionStatus = 1 // Condition is active (problem exists)
	ConditionStatus_CONDITION_STATUS_FALSE       ConditionStatus = 2 // Condition is inactive (healthy)
	ConditionStatus_CONDITION_STATUS_UNKNOWN     ConditionStatus = 3 // Status cannot be determined
)

// Enum value maps for ConditionStatus.
var (
	ConditionStatus_name = map[int32]string{
		0: "CONDITION_STATUS_UNSPECIFIED",
		1: "CONDITION_STATUS_TRUE",
		2: "CONDITION_STATUS_FALSE",
		3: "CONDITION_STATUS_UNKNOWN",
	}
	ConditionStatus_value = map[string]int32{
		"CONDITION_STATUS_UNSPECIFIED": 0,
		"CONDITION_STATUS_TRUE":        1,
		"CONDITION_STATUS_FALSE":       2,
		"CONDITION_STATUS_UNKNOWN":     3,
	}
)

func (x ConditionStatus) Enum() *ConditionStatus {
	p := new(ConditionStatus)
	*p = x
	return p
}

func (x ConditionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_services_external_v1_external_monitor_proto_enumTypes[1].Descriptor()
}

func (ConditionStatus) Type() protoreflect.EnumType {
	return &file_api_services_external_v1_external_monitor_proto_enumTypes[1]
}

func (x ConditionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionStatus.Descriptor instead.
func (ConditionStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_services_external_v1_external_monitor_proto_rawDescGZIP(), []int{1}
}

// HealthCheckRequest contains parameters for the health check.
type HealthCheckRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional runtime parameters that override configuration.
	// Can be used for dynamic reconfiguration without restart.
	Parameters map[string]string `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Sequence number for this check (for debugging/correlation).
	Sequence      int64 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_api_services_external_v1_external_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_services_external_v1_external_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_api_services_external_v1_external_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *HealthCheckRequest) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// Status represents the current health status from the monitor.
// This mirrors the internal types.Status structure.
type Status struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Source identifies the monitor (must match config).
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Events are temporary problem occurrences.
	Events []*Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	// Conditions represent persistent node state.
	Conditions    []*Condition `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_api_services_external_v1_external_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_services_external_v1_external_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_api_services_external_v1_external_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *Status) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Status) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Status) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

// Event represents a temporary problem occurrence.
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Severity level of the event.
	Severity Severity `protobuf:"varint,1,opt,name=severity,proto3,enum=npd.external.v1.Severity" json:"severity,omitempty"`
	// Timestamp when the event occurred.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Reason is a machine-readable identifier for the event type.
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// Message is a human-readable description.
	Message       string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_api_services_external_v1_external_monitor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_services_external_v1_external_monitor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_services_external_v1_external_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *Event) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Event) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Condition represents persistent node state.
type Condition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type is the condition identifier (e.g., "GPUHealthy").
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Status indicates whether the condition is active.
	Status ConditionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=npd.external.v1.ConditionStatus" json:"status,omitempty"`
	// Transition timestamp when status last changed.
	Transition *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=transition,proto3" json:"transition,omitempty"`
	// Reason is a machine-readable identifier for the condition reason.
	Reason string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	// Message is a human-readable description.
	Message       string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Condition) Reset() {
	*x = Condition{}
	mi := &file_api_services_external_v1_external_monitor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_services_external_v1_external_monitor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_api_services_external_v1_external_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *Condition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Condition) GetStatus() ConditionStatus {
	if x != nil {
		return x.Status
	}
	return ConditionStatus_CONDITION_STATUS_UNSPECIFIED
}

func (x *Condition) GetTransition() *timestamppb.Timestamp {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *Condition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Condition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// MonitorMetadata provides information about the monitor plugin.
type MonitorMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the monitor (should match source in Status).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Version of the monitor implementation.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Description of what the monitor checks.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// List of condition types this monitor can report.
	SupportedConditions []string `protobuf:"bytes,4,rep,name=supported_conditions,json=supportedConditions,proto3" json:"supported_conditions,omitempty"`
	// Capabilities and features supported by this monitor.
	Capabilities map[string]string `protobuf:"bytes,5,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// API version this monitor implements.
	ApiVersion    string `protobuf:"bytes,6,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorMetadata) Reset() {
	*x = MonitorMetadata{}
	mi := &file_api_services_external_v1_external_monitor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorMetadata) ProtoMessage() {}

func (x *MonitorMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_services_external_v1_external_monitor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorMetadata.ProtoReflect.Descriptor instead.
func (*MonitorMetadata) Descriptor() ([]byte, []int) {
	return file_api_services_external_v1_external_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *MonitorMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MonitorMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MonitorMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MonitorMetadata) GetSupportedConditions() []string {
	if x != nil {
		return x.SupportedConditions
	}
	return nil
}

func (x *MonitorMetadata) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *MonitorMetadata) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

var File_api_services_external_v1_external_monitor_proto protoreflect.FileDescriptor

const file_api_services_external_v1_external_monitor_proto_rawDesc = "" +
	"\n" +
	"/api/services/external/v1/external_monitor.proto\x12\x0fnpd.external.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xc4\x01\n" +
	"\x12HealthCheckRequest\x12S\n" +
	"\n" +
	"parameters\x18\x01 \x03(\v23.npd.external.v1.HealthCheckRequest.ParametersEntryR\n" +
	"parameters\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x03R\bsequence\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8c\x01\n" +
	"\x06Status\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12.\n" +
	"\x06events\x18\x02 \x03(\v2\x16.npd.external.v1.EventR\x06events\x12:\n" +
	"\n" +
	"conditions\x18\x03 \x03(\v2\x1a.npd.external.v1.ConditionR\n" +
	"conditions\"\xaa\x01\n" +
	"\x05Event\x125\n" +
	"\bseverity\x18\x01 \x01(\x0e2\x19.npd.external.v1.SeverityR\bseverity\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\xc7\x01\n" +
	"\tCondition\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x128\n" +
	"\x06status\x18\x02 \x01(\x0e2 .npd.external.v1.ConditionStatusR\x06status\x12:\n" +
	"\n" +
	"transition\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"transition\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"\xce\x02\n" +
	"\x0fMonitorMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x121\n" +
	"\x14supported_conditions\x18\x04 \x03(\tR\x13supportedConditions\x12V\n" +
	"\fcapabilities\x18\x05 \x03(\v22.npd.external.v1.MonitorMetadata.CapabilitiesEntryR\fcapabilities\x12\x1f\n" +
	"\vapi_version\x18\x06 \x01(\tR\n" +
	"apiVersion\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*J\n" +
	"\bSeverity\x12\x18\n" +
	"\x14SEVERITY_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rSEVERITY_INFO\x10\x01\x12\x11\n" +
	"\rSEVERITY_WARN\x10\x02*\x88\x01\n" +
	"\x0fConditionStatus\x12 \n" +
	"\x1cCONDITION_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15CONDITION_STATUS_TRUE\x10\x01\x12\x1a\n" +
	"\x16CONDITION_STATUS_FALSE\x10\x02\x12\x1c\n" +
	"\x18CONDITION_STATUS_UNKNOWN\x10\x032\xdf\x01\n" +
	"\x0fExternalMonitor\x12K\n" +
	"\vCheckHealth\x12#.npd.external.v1.HealthCheckRequest\x1a\x17.npd.external.v1.Status\x12G\n" +
	"\vGetMetadata\x12\x16.google.protobuf.Empty\x1a .npd.external.v1.MonitorMetadata\x126\n" +
	"\x04Stop\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.EmptyB)Z'k8s.io/npd-ext/api/services/external/v1b\x06proto3"

var (
	file_api_services_external_v1_external_monitor_proto_rawDescOnce sync.Once
	file_api_services_external_v1_external_monitor_proto_rawDescData []byte
)

func file_api_services_external_v1_external_monitor_proto_rawDescGZIP() []byte {
	file_api_services_external_v1_external_monitor_proto_rawDescOnce.Do(func() {
		file_api_services_external_v1_external_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_services_external_v1_external_monitor_proto_rawDesc), len(file_api_services_external_v1_external_monitor_proto_rawDesc)))
	})
	return file_api_services_external_v1_external_monitor_proto_rawDescData
}

var file_api_services_external_v1_external_monitor_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_services_external_v1_external_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_services_external_v1_external_monitor_proto_goTypes = []any{
	(Severity)(0),                 // 0: npd.external.v1.Severity
	(ConditionStatus)(0),          // 1: npd.external.v1.ConditionStatus
	(*HealthCheckRequest)(nil),    // 2: npd.external.v1.HealthCheckRequest
	(*Status)(nil),                // 3: npd.external.v1.Status
	(*Event)(nil),                 // 4: npd.external.v1.Event
	(*Condition)(nil),             // 5: npd.external.v1.Condition
	(*MonitorMetadata)(nil),       // 6: npd.external.v1.MonitorMetadata
	nil,                           // 7: npd.external.v1.HealthCheckRequest.ParametersEntry
	nil,                           // 8: npd.external.v1.MonitorMetadata.CapabilitiesEntry
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 10: google.protobuf.Empty
}
var file_api_services_external_v1_external_monitor_proto_depIdxs = []int32{
	7,  // 0: npd.external.v1.HealthCheckRequest.parameters:type_name -> npd.external.v1.HealthCheckRequest.ParametersEntry
	4,  // 1: npd.external.v1.Status.events:type_name -> npd.external.v1.Event
	5,  // 2: npd.external.v1.Status.conditions:type_name -> npd.external.v1.Condition
	0,  // 3: npd.external.v1.Event.severity:type_name -> npd.external.v1.Severity
	9,  // 4: npd.external.v1.Event.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 5: npd.external.v1.Condition.status:type_name -> npd.external.v1.ConditionStatus
	9,  // 6: npd.external.v1.Condition.transition:type_name -> google.protobuf.Timestamp
	8,  // 7: npd.external.v1.MonitorMetadata.capabilities:type_name -> npd.external.v1.MonitorMetadata.CapabilitiesEntry
	2,  // 8: npd.external.v1.ExternalMonitor.CheckHealth:input_type -> npd.external.v1.HealthCheckRequest
	10, // 9: npd.external.v1.ExternalMonitor.GetMetadata:input_type -> google.protobuf.Empty
	10, // 10: npd.external.v1.ExternalMonitor.Stop:input_type -> google.protobuf.Empty
	3,  // 11: npd.external.v1.ExternalMonitor.CheckHealth:output_type -> npd.external.v1.Status
	6,  // 12: npd.external.v1.ExternalMonitor.GetMetadata:output_type -> npd.external.v1.MonitorMetadata
	10, // 13: npd.external.v1.ExternalMonitor.Stop:output_type -> google.protobuf.Empty
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_services_external_v1_external_monitor_proto_init() }
func file_api_services_external_v1_external_monitor_proto_init() {
	if File_api_services_external_v1_external_monitor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_services_external_v1_external_monitor_proto_rawDesc), len(file_api_services_external_v1_external_monitor_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_services_external_v1_external_monitor_proto_goTypes,
		DependencyIndexes: file_api_services_external_v1_external_monitor_proto_depIdxs,
		EnumInfos:         file_api_services_external_v1_external_monitor_proto_enumTypes,
		MessageInfos:      file_api_services_external_v1_external_monitor_proto_msgTypes,
	}.Build()
	File_api_services_external_v1_external_monitor_proto = out.File
	file_api_services_external_v1_external_monitor_proto_goTypes = nil
	file_api_services_external_v1_external_monitor_proto_depIdxs = nil
}
